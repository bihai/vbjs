#!/usr/bin/env coffee

fs = require 'fs'
pegjs = require 'pegjs'

print_error = (filename, source, error) ->
    indent = "    "
    marked_line = if error.line?
                      """#{indent}#{source.split('\n')[error.line - 1]}
                         #{indent}#{(new Array error.column).join(' ') + '^'}
                      """
                  else
                      ""

    console.error """File #{filename}, line #{error.line ? '?'}
                     #{marked_line}
                     #{error.name}: #{error.message}"""

read = (cb) ->
    process.stdin.resume()
    process.stdin.setEncoding 'utf8'

    data = ''
    process.stdin.on 'data', (chunk) -> data += chunk
    process.stdin.on 'end', -> cb data

if process.argv[2] in ['-h', '--help']
    console.log "usage: cat <grammarfile> | ./pegjs_build > <outputfile>"
    process.exit 2

read (grammar) ->
    try
        parser = pegjs.buildParser grammar
    catch error
        print_error process.argv[2] ? '<stdin>', grammar, error
        process.exit 1

    process.stdout.write """var parser = #{parser.toSource()};
                            var print_error = #{print_error.toString()};
                            exports.check = function(filename, source) {
                                try {
                                    parser.parse(source);
                                } catch (error) {
                                    print_error(filename, source, error);
                                }
                            };"""
