start = expression EOF
expression = concat_expr

{{include common}}

primary_expr
    = lazy_call_expr
    / braced_expression
    / identifier_expr
    / value
    / plain_call_expr
lazy_call_expr
    = lazy_name LEFT_PAREN (lazy_value (comma lazy_value)* )? RIGHT_PAREN
lazy_value
    = bracketed_identifier
    / literal
lazy_name = 'Sum' _

identifier_expr = identifier_expr_itself
identifier_expr_itself = identifier_expr_part (identifier_op identifier_expr_part)*
identifier_expr_part
    = plain_call_expr
    / identifier
identifier
    = bracketed_identifier
    / name
plain_call_expr
    = name LEFT_PAREN (expression (comma expression)* )? RIGHT_PAREN

name = name_itself

// optional whitespace
_ = [ \t]*
